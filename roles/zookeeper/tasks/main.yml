---
- name: Remove existing zookeeper directory
  ansible.builtin.file:
    path: "{{ zookeeper_dir }}"
    state: absent
  tags: zookeeper

- name: Create data and log directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0755'
  loop:
    - "{{ zookeeper_data_dir }}"
    - "{{ zookeeper_log_dir }}"
  tags: zookeeper

- name: Download Zookeeper
  get_url:
    url: "{{ zookeeper_url }}"
    dest: "/tmp/zookeeper-{{ zookeeper_version }}.tar.gz"
  tags: zookeeper

- name: Extract Zookeeper
  unarchive:
    src: "/tmp/zookeeper-{{ zookeeper_version }}.tar.gz"
    dest: "/opt"
    remote_src: true
    creates: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin"
  tags: zookeeper

- name: Create symlink for Zookeeper
  ansible.builtin.file:
    src: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin"
    dest: "{{ zookeeper_dir }}"
    state: link
  tags: zookeeper

- name: Set Zookeeper ID
  copy:
    content: "{{ zookeeper_id }}"
    dest: "{{ zookeeper_data_dir }}/myid"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  tags: zookeeper

- name: Configure Zookeeper
  ansible.builtin.template:
    src: zoo.cfg.j2
    dest: "{{ zookeeper_dir }}/conf/zoo.cfg"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  tags: zookeeper

- name: Install Zookeeper service
  ansible.builtin.template:
    src: zookeeper.service.j2
    dest: /etc/systemd/system/zookeeper.service
  tags: zookeeper

- name: Start Zookeeper service
  systemd:
    name: zookeeper
    state: started
    enabled: true
    daemon_reload: true
  tags: zookeeper
