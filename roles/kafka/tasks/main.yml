---
- name: Download Kafka
  get_url:
    url: "{{ kafka_url }}"
    dest: "/tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz"
  tags: kafka

- name: Create Kafka directory
  ansible.builtin.file:
    path: "{{ kafka_home }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  tags: kafka

- name: Extract Kafka
  unarchive:
    src: "/tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz"
    dest: "/opt"
    remote_src: true
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  tags: kafka

- name: Create Kafka symlink
  ansible.builtin.file:
    src: "/opt/kafka_{{ kafka_scala_version }}-{{ kafka_version }}"
    dest: "{{ kafka_home }}"
    state: link
    force: true
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  tags: kafka

- name: Create data directory
  ansible.builtin.file:
    path: "{{ kafka_data_dir }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0755'
  tags: kafka

- name: Create log directory
  ansible.builtin.file:
    path: "{{ kafka_log_dir }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0755'
  tags: kafka

- name: Configure Kafka
  ansible.builtin.template:
    src: server.properties.j2
    dest: "{{ kafka_home }}/config/server.properties"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  notify: restart kafka
  tags: kafka

- name: Install Kafka service
  ansible.builtin.template:
    src: kafka.service.j2
    dest: /etc/systemd/system/kafka.service
  notify: restart kafka
  tags: kafka

- name: Start Kafka service
  systemd:
    name: kafka
    state: started
    enabled: true
    daemon_reload: true
  tags: kafka
